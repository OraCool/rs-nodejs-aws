!function(e,t){for(var r in t)e[r]=t[r]}(exports,function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=4)}([function(e,t){e.exports=require("tslib")},function(e,t){e.exports=require("lodash")},function(e,t){e.exports=require("pg")},function(e,t){e.exports=require("source-map-support/register")},function(e,t,r){"use strict";r.r(t),r.d(t,"getProduct",(function(){return v})),r.d(t,"getProducts",(function(){return f})),r.d(t,"pgInit",(function(){return G}));var n=r(0),o=(r(3),r(1)),i=r(2);class s{constructor(e,t,r,n,o){this.id=e,this.title=t,this.description=r,this.price=n,this.count=o}}const{PG_HOST:c,PG_PORT:u,PG_DATABASE:d,PG_USERNAME:a,PG_PASSWORD:l}=process.env,p={host:c,port:Object(o.toNumber)(u),database:d,user:a,password:l,ssl:{rejectUnauthorized:!1},connectionTimeoutMillis:5e3},f=(e,t)=>Object(n.__awaiter)(void 0,void 0,void 0,(function*(){const e=new i.Client(p);yield e.connect();const t=(yield e.query("select p.*, s.count from products p left join stocks s on p.id=s.product_id")).rows.map(e=>new s(e.id,e.title,e.description,e.price,e.count));return{headers:{"Access-Control-Allow-Origin":"*"},statusCode:200,body:JSON.stringify(t)}})),{PG_HOST:b,PG_PORT:y,PG_DATABASE:P,PG_USERNAME:_,PG_PASSWORD:O}=process.env,h={host:b,port:o.toNumber(y),database:P,user:_,password:O,ssl:{rejectUnauthorized:!1},connectionTimeoutMillis:5e3},v=(e,t)=>Object(n.__awaiter)(void 0,void 0,void 0,(function*(){if(e&&e.pathParameters&&e.pathParameters.productId){const t=new i.Client(h);yield t.connect();const r=e.pathParameters.productId;let n;const o=(yield t.query("select p.*, s.count from products p left join stocks s on p.id=s.product_id where p.id=$1",[r])).rows[0];return o&&(n=new s(o.id,o.title,o.description,o.price,o.count)),n?{headers:{"Access-Control-Allow-Origin":"*"},statusCode:200,body:JSON.stringify(n)}:{headers:{"Access-Control-Allow-Origin":"*"},statusCode:404,body:`Product with id=${r} is not found`}}return{headers:{"Access-Control-Allow-Origin":"*"},statusCode:400,body:"Bad request"}})),{PG_HOST:A,PG_PORT:S,PG_DATABASE:g,PG_USERNAME:w,PG_PASSWORD:m}=process.env,j={host:A,port:Object(o.toNumber)(S),database:g,user:w,password:m,ssl:{rejectUnauthorized:!1},connectionTimeoutMillis:5e3};function G(e,t){return Object(n.__awaiter)(this,void 0,void 0,(function*(){const e=new i.Client(j);yield e.connect();const t={headers:{"Access-Control-Allow-Origin":"*"},statusCode:200,body:"Success"};try{yield e.query("\n      create table products(\n        id uuid primary key default uuid_generate_v4(),\n        title varchar(64),\n        description text,\n        price float\n      );"),yield e.query('\n      create table stocks(\n        product_id uuid,\n        count integer,\n        foreign key ("product_id") references "products" ("id")\n      )'),yield e.query("\n      insert into\n        products (id, title, description, price)\n      values\n        (\n          'febf406e-dc40-44e0-838a-ca552048a246',\n          'ProductOne',\n          'Short Product Description1',\n          10.5\n        ),\n        (\n          'e38bf509-f303-4114-84a1-bda1561ab828',\n          'ProductNew',\n          'Short Product Description3',\n          15.5\n        );"),yield e.query("\n      insert into\n        stocks (product_id, count)\n      values\n        ('febf406e-dc40-44e0-838a-ca552048a246', 5),\n        ('e38bf509-f303-4114-84a1-bda1561ab828', 3)")}catch(e){console.error("Error during database request executing:",e),t.statusCode=500,t.body="Internal error"}finally{e.end()}return new Promise(()=>t)}))}}]));
//# sourceMappingURL=handler.js.map